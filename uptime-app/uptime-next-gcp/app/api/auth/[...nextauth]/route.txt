// src/app/api/auth/[...nextauth]/route.ts
import NextAuth from "next-auth";
import GitHubProvider from "next-auth/providers/github";
import { sql } from "@/app/lib/db";

// Directly create the NextAuth handler with options inside it
const handler = NextAuth({
  providers: [
    GitHubProvider({
      clientId: process.env.GITHUB_CLIENT_ID!,
      clientSecret: process.env.GITHUB_CLIENT_SECRET!,
    }),
  ],
  callbacks: {
    async signIn({ user }) {
      if (user?.email) {
        try {
          // SQL query to check if the email exists in the database
          const res = await sql(
            "SELECT user_id, user_first_name, user_middle_name, user_last_name, user_display_name FROM u_users_index WHERE user_email=$1",
            [user.email]
          );

          if (res.rowCount === 0) {
            // User does not exist
            console.log(`User not found with email: ${user.email}`);
            return false; // Reject sign-in if user not found
          }

          // User exists, you can access their details
          const sqlMyUser = res.rows[0];
          console.log("User found: ", sqlMyUser);

        } catch (error) {
          console.error("Error checking user email in database: ", error);
          return false; // Reject the sign-in in case of an error
        }
      }
      return true; // Allow sign-in if user email exists
    },

    async session({ session, token }) {
      if (session.user) {
        session.user.id = token.sub!; // Safely add the `id` to the session
      }
      return session;
    },
  },
  secret: process.env.NEXTAUTH_SECRET,
});

// Export the handler for both GET and POST requests
export { handler as GET, handler as POST };
